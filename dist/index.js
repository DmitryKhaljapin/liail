(()=>{"use strict";class n{static async#n(n){if(!n)return JSON.parse('\n{\n    "services": [\n        {\n            "id": 1,\n            "head": null,\n            "name": "Проф.осмотр",\n            "node": 0,\n            "price": 100.0,\n            "sorthead": 20\n        },\n        {\n            "id": 2,\n            "head": null,\n            "name": "Хирургия",\n            "node": 1,\n            "price": 0.0,\n            "sorthead": 10\n        },\n        {\n            "id": 3,\n            "head": 2,\n            "name": "Удаление зубов",\n            "node": 1,\n            "price": 0.0,\n            "sorthead": 10\n        },\n        {\n            "id": 4,\n            "head": 3,\n            "name": "Удаление зуба",\n            "node": 0,\n            "price": 800.0,\n            "sorthead": 10\n        },\n        {\n            "id": 5,\n            "head": 3,\n            "name": "Удаление 8ого зуба",\n            "node": 0,\n            "price": 1000.0,\n            "sorthead": 30\n        },\n        {\n            "id": 6,\n            "head": 3,\n            "name": "Удаление осколка зуба",\n            "node": 0,\n            "price": 2000.0,\n            "sorthead": 20\n        },\n        {\n            "id": 7,\n            "head": 2,\n            "name": "Хирургические вмешательство",\n            "node": 0,\n            "price": 200.0,\n            "sorthead": 10\n        },\n        {\n            "id": 8,\n            "head": 2,\n            "name": "Имплантация зубов",\n            "node": 1,\n            "price": 0.0,\n            "sorthead": 20\n        },\n        {\n            "id": 9,\n            "head": 8,\n            "name": "Коронка",\n            "node": 0,\n            "price": 3000.0,\n            "sorthead": 10\n        },\n        {\n            "id": 10,\n            "head": 8,\n            "name": "Слепок челюсти",\n            "node": 0,\n            "price": 500.0,\n            "sorthead": 20\n        }\n    ]\n}    ');const e=await fetch(n);return!!e.ok&&await e.json()}static#e(n){const e={id:null,services:[]};return function e(a){n.services.forEach((n=>{n.head===a.id?(a?.services||(a.services=[]),a.services.push(n),e(n)):a.services&&a.services.sort(((n,e)=>n.sorthead-e.sorthead))}))}(e),e}static async getData(e){const a=await n.#n(e);return n.#e(a)}}class e{static#a(n,e){const a=document.createElement(n);return e.length&&e.forEach((n=>a.append(n))),a}static#r(n,e){document.getElementById(e).append(n)}static renderTree(n){const a=function n(a){return e.#a("ol",a.map((a=>a.node?e.#a("li",[`${a.name}`,n(a.services)]):e.#a("li",[`${a.name} ${a.node?"":`(${a.price})`}`]))))}(n.services);e.#r(a,"app")}}!async function(){const a=await n.getData("");e.renderTree(a)}()})();